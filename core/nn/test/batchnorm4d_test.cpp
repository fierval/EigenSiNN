#include <gtest/gtest.h>
#include <layers/batchnorm.hpp>
#include <iostream>
#include <ops/conversions.hpp>
#include <ops/comparisons.hpp>

using namespace EigenSinn;

namespace EigenSinnTest {
  class Batchnorm4dTest : public ::testing::Test {
  protected:
    void SetUp() override {

      Tensor<float, 4> tmp(2, 3, 4, 4);
      tmp.setValues({ {{{0.04538226, 0.95949411, 0.50452268, 0.59602135},
        {0.74790466, 0.73222357, 0.07335120, 0.85607505},
        {0.90876633, 0.47080678, 0.24576986, 0.59051216},
        {0.29745585, 0.98773926, 0.62964255, 0.36631453}},

        {{0.50406832, 0.42415136, 0.34337270, 0.72482306},
        {0.46068907, 0.96129739, 0.62765759, 0.27029365},
        {0.35458261, 0.38653296, 0.47089547, 0.82289129},
        {0.63725311, 0.29671627, 0.54370487, 0.87211448}},

        {{0.85018283, 0.75999165, 0.15591985, 0.40320259},
        {0.74964321, 0.10842186, 0.55331987, 0.58271384},
        {0.67342269, 0.74921608, 0.96604007, 0.26602185},
        {0.53013945, 0.98281318, 0.43664277, 0.76730776}} },


        {{{0.61419797, 0.84584051, 0.52509171, 0.18094194},
        {0.38709599, 0.25413889, 0.74516875, 0.27006137},
        {0.72085720, 0.84589291, 0.62312174, 0.93618810},
        {0.64560336, 0.61316019, 0.96158671, 0.92482752}},

        {{0.11359078, 0.84837216, 0.81256318, 0.98481309},
        {0.36437154, 0.10838908, 0.87681556, 0.37505645},
        {0.05423701, 0.66477776, 0.46080470, 0.09901488},
        {0.24049366, 0.78823119, 0.09643930, 0.77357787}},

        {{0.92674822, 0.49461865, 0.82311010, 0.50724411},
        {0.43091267, 0.64998370, 0.53645664, 0.69436163},
        {0.01849866, 0.22924691, 0.96253598, 0.99673647},
        {0.09387362, 0.86051500, 0.52929527, 0.41473496}}}});

      input = tmp.shuffle(array<int, 4>{0, 2, 3, 1});

      gamma.resize(dims[1]);
      beta.resize(dims[1]);

      gamma.setValues({ 1., 2., 3.,});
      beta = gamma * 0.1f;


      tmp.setValues({{{{0.03411579, 0.30640966, 0.19440770, 0.00902396},
          {0.87998140, 0.08524799, 0.20483696, 0.11298430},
          {0.33172631, 0.01118428, 0.81524986, 0.33781791},
          {0.72575861, 0.48591703, 0.83571565, 0.74452734}},

         {{0.99675554, 0.52758676, 0.70237589, 0.33300936},
          {0.18728876, 0.86973250, 0.55728424, 0.77503520},
          {0.90626729, 0.46376646, 0.63194448, 0.14518911},
          {0.89655298, 0.54174763, 0.61954391, 0.52469307}},

         {{0.73198414, 0.08069026, 0.49224281, 0.47842449},
          {0.98264766, 0.13089573, 0.07510883, 0.34220546},
          {0.08220178, 0.48254997, 0.63483059, 0.02323723},
          {0.77521580, 0.24670333, 0.50362766, 0.62766153}}},


        {{{0.98965490, 0.88055056, 0.92259568, 0.24774176},
          {0.72176152, 0.90675122, 0.08763289, 0.57801038},
          {0.17916220, 0.27972364, 0.25751638, 0.81748664},
          {0.56826556, 0.73269165, 0.31478405, 0.95569855}},

         {{0.51677078, 0.98813075, 0.33273274, 0.64959395},
          {0.08583117, 0.13452137, 0.38807088, 0.40816027},
          {0.35822779, 0.15018040, 0.96034634, 0.90043443},
          {0.91827869, 0.20131719, 0.65043378, 0.43243688}},

         {{0.91697454, 0.39756697, 0.30185652, 0.28277457},
          {0.81693399, 0.69717938, 0.09399003, 0.18187153},
          {0.63124579, 0.38466102, 0.76345491, 0.11254698},
          {0.19470620, 0.97134984, 0.39794821, 0.64935327}}}});

        loss = tmp.shuffle(array<int, 4>{ 0, 2, 3, 1 });

        tmp.setValues({{{{-1.62950921, -0.69685334, -1.07382250, -1.76897717},
          {1.44790602, -1.49780560, -0.99879819, -1.40539515},
          {-0.59869730, -1.75040984, 1.25020134, -0.54927766},
          {0.91399211, -0.03358459, 1.29372990, 0.97778517}},

          {{ 3.21753860, -0.24326260, 0.98930210, -1.50716734},
          {-2.70493531, 2.52641654, 0.07768558, 1.48139572},
          {2.48122144, -0.72776258, 0.54139984, -2.82583928},
          {2.55554152, -0.20547122, 0.48839360, -0.03436335}},

          {{ 2.36492753, -4.52022934, 1.54314220, 0.75145990},
          {5.36521959, -2.28342438, -4.04580355, -1.20251715},
          {-4.27943039, -0.09987716, 1.00285757, -3.86846089},
          {3.66660929, -3.28293324, 0.94030267, 1.43936074}} },


          {{{ 1.86587000, 1.44176006, 1.62471294, -0.84876907},
          {0.89161289, 1.58880150, -1.49005330, 0.36842105},
          {-1.14859426, -0.78623319, -0.84980124, 1.20028925},
          {0.30062473, 0.91308540, -0.66597581, 1.71376503}},

          {{-0.48154697, 3.33144355, -1.46413648, 0.93390024},
          {-3.49391031, -3.27043295, -1.02778876, -1.13896823},
          {-1.66763973, -2.87063575, 2.92993975, 2.30749345},
          {2.51019764, -2.43451667, 0.48391661, -0.75740886}},

          {{ 4.18856192, -0.36916953, -2.26634550, -1.65659082},
          {4.37967062, 2.50316525, -3.79573894, -3.24426031},
          {3.41850448, 0.17727301, 2.41783452, -4.78536987},
          {-1.54826808, 4.95449162, -0.45484051, 2.58988047}}}});

        dinput = tmp.shuffle(array<int, 4>{0, 2, 3, 1});

        tmp.setValues({{{{-1.94571459, 1.44399858, -0.24312836, 0.09616741},
          {0.65938169, 0.60123307, -1.84200013, 1.06049955},
          {1.25588965, -0.36815381, -1.20263660, 0.07573818},
          {-1.01097441, 1.54873741, 0.22084165, -0.75563234}},

          {{ 0.14706215, -0.43545246, -1.02424788, 1.75614321},
          {-0.16912912, 3.47980428, 1.04790425, -1.55692101},
          {-0.94253904, -0.70965290, -0.09473468, 2.47096252},
          {1.11784589, -1.36432660, 0.43597293, 2.82975006}},

          {{ 3.20402884, 2.21821475, -4.38445377, -1.68158627},
          {2.10510349, -4.90361881, -0.04076374, 0.28052032},
          {1.27199268, 2.10043478, 4.47037983, -3.18100882},
          {-0.29413205, 4.65371466, -1.31607628, 2.29818177}} },


          {{{ 0.16357000, 1.02254784, -0.16685420, -1.44303179},
          {-0.67857045, -1.17160249, 0.64923638, -1.11255872},
          {0.55908424, 1.02274215, 0.19666116, 1.35757518},
          {0.28002760, 0.15972172, 1.45175838, 1.31544781}},

          {{-2.69912815, 2.65669250, 2.39568090, 3.65121031},
          {-0.87118751, -2.73704314, 2.86401629, -0.79330522},
          {-3.13175750, 1.31847310, -0.16828628, -2.80537176},
          {-1.77413309, 2.21832490, -2.82414508, 2.11151695}},

          {{ 4.04090929, -0.68238389, 2.90811658, -0.54438430},
          {-1.37870765, 1.01579809, -0.22508341, 1.50086093},
          {-5.88650417, -3.58296895, 4.43207932, 4.80590010},
          {-5.06263542, 3.31696224, -0.30335921, -1.55553436}} }});

        output = tmp.shuffle(array<int, 4>{0, 2, 3, 1});

      }

     //void TearDown() override {}

      Tensor<float, 4> input, loss, dinput, output;
      Tensor<float, 1> beta, gamma;
      const float eps = 1e-5, momentum = 0.9;

      // channel first
      const array<Index, 4> dims = { 2, 3, 4, 4 };
      const float prec = 1e-5;
    };

    TEST_F(Batchnorm4dTest, Forward) {

      BatchNormalizationLayer<float, 4> bn(3);
      bn.init(beta, gamma);
      bn.forward(input);

      EXPECT_TRUE(is_elementwise_approx_eq(output, bn.get_output(), 1e-5));
    }
  }